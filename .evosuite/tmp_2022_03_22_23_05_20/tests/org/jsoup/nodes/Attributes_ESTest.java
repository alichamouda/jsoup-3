/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 22:13:14 GMT 2022
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Attributes_ESTest extends Attributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = new Attributes();
      attributes1.html();
      Attributes attributes2 = attributes1.put("TGW}R=-Frb", true);
      attributes2.normalize();
      attributes0.equals(attributes1);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("org.eclipse.jetty.util.component.FileNoticeLifeCycleListener", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = new Attributes();
      attributes0.normalize();
      attributes0.equals(attributes1);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("org.eclipse.jetty.util.component.FileNoticeLifeCycleListener", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      MockFile mockFile0 = new MockFile((String) null, "figcaption");
      attributes0.equals((Object) null);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("&rowOU}/h'1{{+U", "&rowOU}/h'1{{+U");
      Attributes attributes2 = attributes1.put("afah2k./x~F*u", true);
      Attributes.checkNotNull("afah2k./x~F*u");
      attributes2.toString();
      attributes0.putIgnoreCase("afah2k./x~F*u", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      Attributes attributes2 = attributes1.put("", "");
      attributes2.toString();
      attributes1.hasKeyIgnoreCase("");
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("org.eclipse.jetty.util.component.FileNoticeLifeCycleListener", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.put("%uE<G", false);
      attributes0.hasKeyIgnoreCase("WRTJ\"o3");
      attributes0.put("", true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("-P5C", "");
      attributes0.put(attribute0);
      attributes0.hasKey("-P5C");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.hashCode();
      attributes0.hasKey("");
      Attributes.checkNotNull((String) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.indexOfKey("1q");
      attributes0.removeIgnoreCase("");
      attributes0.remove("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("$BAW-0)lFs-J\"#$dW", "$BAW-0)lFs-J\"#$dW");
      Attributes attributes2 = attributes1.clone();
      Attributes attributes3 = attributes2.put("$BAW-0)lFs-J\"#$dW", false);
      attributes3.size();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.equals(attributes0);
      attributes0.putIgnoreCase("data-", "data-");
      attributes0.removeIgnoreCase("data-");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("&rowOU}/h'1{{+U", "&rowOU}/h'1{{+U");
      Attributes attributes2 = attributes1.put("#documnt", true);
      attributes2.removeIgnoreCase("&rowOU}/h'1{{+U");
      attributes0.putIgnoreCase("afah2k./x~F*u", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("&rowOU}/h'1{{+U", "&rowOU}/h'1{{+U");
      attributes1.put("afah2k./x~F*u", true);
      attributes0.asList();
      attributes0.normalize();
      attributes0.putIgnoreCase("afah2k./x~F*u", "org.jsoup.nodes.Attributes$Dataset$EntrySet");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("-P5C", "");
      Attributes attributes1 = attributes0.put(attribute0);
      Attributes attributes2 = attributes1.put("org.jsoup.nodes.Attributes$1", "");
      attributes2.getIgnoreCase("-P5C");
      attributes0.normalize();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.get("zl*v<iXV[IM%ilEUj");
      attributes0.getIgnoreCase("*y[9e3hX#<*(\"\"");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded("}5,.eJJ@9!j", "}5,.eJJ@9!j");
      Attributes attributes1 = attributes0.put(attribute0);
      attributes0.addAll(attributes0);
      attributes1.get("}5,.eJJ@9!j");
      attributes1.remove("org.jsoup.nodes.Entities$CoreCharset");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("</", false);
      Attribute attribute0 = new Attribute("</", "1aJV1bd^SW?", attributes0);
      attribute0.toString();
      Attributes attributes2 = attributes1.put(attribute0);
      attributes1.putIgnoreCase("U6w(", "</");
      attributes2.putIgnoreCase("</", "zl*v<iXV[IM%ilEUj");
      attributes1.equals("org.jsoup.nodes.Attributes$Dataset");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = new Attributes();
      attributes1.putIgnoreCase("?2 %A2fGdR7S5Aim", "org.jsoup.nodes.Attributes$Dataset$DatasetIterator");
      attributes1.putIgnoreCase("IV.|a<MxHfNc\"`,h`@8", "uvUhq=iq0M_.N9G");
      attributes1.putIgnoreCase("2;0\"q4\"5|UA!", "/d:?nay88l");
      attributes0.putIgnoreCase("/d:?nay88l", "org.jsoup.nodes.Attributes$Dataset");
      attributes1.putIgnoreCase("org.jsoup.nodes.Attributes$Dataset", "/d:?nay88l");
      attributes0.addAll(attributes1);
      attributes0.html();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.dataset();
      attributes0.putIgnoreCase("1aJV1bd^SW?", "1aJV1bd^SW?");
      attributes0.getIgnoreCase("L2>*gXX}l8]M3x)w");
      attributes0.putIgnoreCase("U6w(", "</");
      attributes0.putIgnoreCase("</", "zl*v<iXV[IM%ilEUj");
      attributes0.addAll(attributes0);
      attributes0.getIgnoreCase("*y[9e3hX#<*(\"\"");
      assertEquals(3, attributes0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      attributes0.addAll(attributes0);
      attributes0.toString();
      attributes0.getIgnoreCase("");
  }
}
