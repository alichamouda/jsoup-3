/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 22:09:41 GMT 2022
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharacterReader_ESTest extends CharacterReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = CharacterReader.rangeEquals(charArray0, 47, 18, "");
      assertFalse(boolean0);
      assertArrayEquals(new char[] {}, charArray0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("6YWB[^%p");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTo('d');
      assertEquals(8, characterReader0.pos());
      assertEquals("6YWB[^%p", string0);
      assertNotNull(string0);
      
      characterReader0.rewindToMark();
      assertEquals(0, characterReader0.pos());
      
      String string1 = characterReader0.consumeTagName();
      assertEquals(8, characterReader0.pos());
      assertEquals("6YWB[^%p", string1);
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 40);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.containsIgnoreCase("7");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qJqQG/");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("M^+&b[");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchConsume("[");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9>/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[2];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(8, characterReader0.pos());
      assertEquals("94/gv)$K", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
      assertEquals(2, charArray0.length);
      
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(8, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("v");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EB~6{w");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x#I+$viVIaO?Q");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertEquals("2 h", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchesLetter();
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[4];
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(4, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertEquals("2 h", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
      
      boolean boolean0 = characterReader0.matchesAnySorted((char[]) null);
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x#I+$viVIaO?Q");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      char[] charArray0 = new char[6];
      charArray0[0] = '#';
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(1, characterReader0.pos());
      assertTrue(boolean0);
      assertArrayEquals(new char[] {'#', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(6, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertEquals("2 h", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
      
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x#I+$viVIaO?Q");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[6];
      boolean boolean0 = characterReader0.matchesAny(charArray0);
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals(6, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R0)fAzb(w\"nJC/U");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2952);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("a<");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTo("% omp'C{(gd");
      assertEquals(2, characterReader0.pos());
      assertEquals("{G", string0);
      assertNotNull(string0);
      
      boolean boolean0 = characterReader0.matchConsumeIgnoreCase("{G");
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchesIgnoreCase("'.*I33/gu$^:RhOi");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matches("{G");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTagName();
      assertEquals(2, characterReader0.pos());
      assertEquals("94", string0);
      assertNotNull(string0);
      
      boolean boolean0 = characterReader0.matches("94/gv)$K");
      assertEquals(2, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matchConsume("");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      boolean boolean0 = characterReader0.matches('\\');
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertEquals("2 h", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
      
      boolean boolean0 = characterReader0.matches('B');
      assertEquals(3, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 40);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("7", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x#I+$viVIaO?Q");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      characterReader0.unconsume();
      assertEquals(0, characterReader0.pos());
      
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeDigitSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("x#I+$viVIaO?Q");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      characterReader0.advance();
      assertEquals(1, characterReader0.pos());
      
      characterReader0.unconsume();
      assertEquals(0, characterReader0.pos());
      
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BPH%j$1CM");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 90);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(1, characterReader0.pos());
      assertEquals("B", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e3@`c)");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 47);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(2, characterReader0.pos());
      assertEquals("e3", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeHexSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[2];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(8, characterReader0.pos());
      assertEquals("94/gv)$K", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
      assertEquals(2, charArray0.length);
      
      String string1 = characterReader0.consumeHexSequence();
      assertEquals(8, characterReader0.pos());
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("EB~6{w");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
      assertEquals("EB", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTagName();
      assertEquals(2, characterReader0.pos());
      assertEquals("94", string0);
      assertNotNull(string0);
      
      characterReader0.advance();
      assertEquals(3, characterReader0.pos());
      
      String string1 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(5, characterReader0.pos());
      assertEquals("gv", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("94/gv)$K");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(2, characterReader0.pos());
      assertEquals("94", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      char[] charArray0 = new char[1];
      String string0 = characterReader0.consumeToAny(charArray0);
      assertEquals(3, characterReader0.pos());
      assertEquals("2 h", string0);
      assertNotNull(string0);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals(1, charArray0.length);
      
      String string1 = characterReader0.consumeLetterThenDigitSequence();
      assertEquals(3, characterReader0.pos());
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("Ay7T.*cED(|");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
      assertEquals("Ay", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeLetterSequence();
      assertEquals(0, characterReader0.pos());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTo("% omp'C{(gd");
      assertEquals(2, characterReader0.pos());
      assertEquals("{G", string0);
      assertNotNull(string0);
      
      String string1 = characterReader0.consumeLetterSequence();
      assertEquals(2, characterReader0.pos());
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IWCR");
      assertNotNull(stringReader0);
      
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      assertEquals(0, characterReader0.pos());
      assertNotNull(characterReader0);
      
      String string0 = characterReader0.consumeTo('X');
      assertEquals(4, characterReader0.pos());
      assertEquals("IWCR", string0);
      assertNotNull(string0);
      
      String string1 = characterReader0.consumeTagName();
      assertEquals(4, characterReader0.pos());
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("9>/gv)$K");
      characterReader0.consumeTagName();
      boolean boolean0 = characterReader0.matchesDigit();
      assertEquals(1, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTagName();
      assertEquals(1, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IWCR");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('X');
      characterReader0.consumeData();
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("LY0#uAX );`rEZ<j$K");
      characterReader0.consumeData();
      assertEquals(14, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("M^+&b[");
      characterReader0.consumeData();
      assertEquals(3, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      char[] charArray0 = new char[9];
      charArray0[4] = 'I';
      characterReader0.consumeToAnySorted(charArray0);
      boolean boolean0 = characterReader0.matchesAnySorted(charArray0);
      assertEquals(19, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      char[] charArray0 = new char[9];
      characterReader0.consumeToAnySorted(charArray0);
      assertEquals(30, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader("IWCR");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.consumeTo('X');
      characterReader0.consumeToAnySorted((char[]) null);
      assertEquals(4, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringReader stringReader0 = new StringReader("R0)fAzb(w\"nJC/U");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 2952);
      char[] charArray0 = new char[7];
      charArray0[2] = 'b';
      characterReader0.consumeToAny(charArray0);
      assertEquals(6, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("s~|0y~{Elgg~Yz%d`");
      String string0 = characterReader0.consumeTo("s~|0y~{Elgg~Yz%d`");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      characterReader0.consumeTo("% omp'C{(gd");
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      assertEquals(2, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.containsIgnoreCase("org.jsoup.UncheckedIOException");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("{G");
      boolean boolean0 = characterReader0.containsIgnoreCase("{G");
      assertEquals(0, characterReader0.pos());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      int int0 = characterReader0.nextIndexOf('c');
      assertEquals(0, characterReader0.pos());
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char[] charArray0 = new char[1];
      characterReader0.consumeToAny(charArray0);
      char char0 = characterReader0.consume();
      assertEquals(4, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2 h");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.consume();
      assertEquals(1, characterReader0.pos());
      assertEquals('2', char0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      characterReader0.consumeTo('m');
      char char0 = characterReader0.current();
      assertEquals(30, characterReader0.pos());
      assertEquals('\uFFFF', char0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      char char0 = characterReader0.current();
      assertEquals('\'', char0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      boolean boolean0 = characterReader0.matchesDigit();
      assertFalse(boolean0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 65535);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      int int0 = characterReader0.pos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      boolean boolean0 = characterReader0.rangeEquals((-1), (-1113), "");
      assertEquals(0, characterReader0.pos());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CharacterReader characterReader0 = new CharacterReader("org.jsoup.UncheckedIOException");
      String string0 = characterReader0.toString();
      assertEquals("org.jsoup.UncheckedIOException", string0);
      assertEquals(0, characterReader0.pos());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'.*I33/gu$^:RhOi");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      characterReader0.mark();
      assertEquals(0, characterReader0.pos());
  }
}
